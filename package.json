{
  "name": "threema-web-electron",
  "scripts": {
    "app:install": "cd app && npm install && cd ..",
    "app:ci": "cd app && npm ci --cache ../.npm && cd ..",
    "app:clean": "rm -rf app/dist && rm -rf app/build",
    "app:lint": "npm run app:lint:eslint && npm run app:lint:tsc && npm run app:lint:prettier",
    "app:lint:fix": "npm run app:lint:eslint:fix && npm run app:lint:prettier:fix",
    "app:lint:tsc": "npm run app:lint:tsc:app && npm run app:lint:tsc:test",
    "app:lint:tsc:app": "npx tsc --noEmit -p app/tsconfig.json",
    "app:lint:tsc:test": "npx tsc --noEmit -p test/tsconfig.json",
    "app:lint:eslint": "eslint . --ext .js,.cjs,.mjs,.ts",
    "app:lint:eslint:fix": "eslint . --ext .js,.cjs,.mjs,.ts --fix",
    "app:lint:prettier": "prettier -c \"**/*.{js,json,md,ts,yml}\"",
    "app:lint:prettier:fix": "prettier --write \"**/*.{js,json,md,ts,yml}\"",
    "app:build": "npm run app:build:electron:main && echo 'Use app:build:web to build Threema Web'",
    "app:build:web": "cd app/dependencies/threema-web && rm -rf release && npm install --production && npm rebuild node-sass && npm run dist && cd ../..",
    "app:build:electron:main": "tsc --build app/tsconfig.json && npm run copy-files",
    "copy-files": "copyfiles -u 1 app/src/**/*.json app/dist",
    "app:start": "cd app && NODE_ENV=development electron .",
    "test": "nyc --reporter=cobertura ts-mocha -p test/tsconfig.json test/**/*.spec.ts --timeout 30000",
    "test:junit": "nyc --reporter=cobertura ts-mocha -p test/tsconfig.json --reporter mocha-junit-reporter test/**/*.spec.ts --timeout 30000",
    "electron:dist:all": "npm run electron:dist:macos:all && npm run electron:dist:linux:deb:all && npm run electron:dist:linux:rpm:all && npm run electron:dist:windows:all",
    "electron:dist:macos": "npm run app:build && node tools/run-dist-electron.js macOS",
    "electron:dist:macos:all": "npm run app:build && npm run electron:dist:macos:consumer && npm run electron:dist:macos:work && npm run electron:dist:macos:red",
    "electron:dist:macos:consumer": "npm run electron:dist:macos consumer",
    "electron:dist:macos:work": "npm run electron:dist:macos work",
    "electron:dist:macos:red": "npm run electron:dist:macos red",
    "electron:dist:windows": "npm run app:build && node tools/run-dist-electron.js windows",
    "electron:dist:windows:all": "npm run app:build && npm run electron:dist:windows:consumer && npm run electron:dist:windows:work && npm run electron:dist:windows:red",
    "electron:dist:windows:consumer": "npm run electron:dist:windows consumer",
    "electron:dist:windows:work": "npm run electron:dist:windows work",
    "electron:dist:windows:red": "npm run electron:dist:windows red",
    "electron:dist:linux": "npm run electron:dist:linux:deb && npm run electron:dist:linux:rpm",
    "electron:dist:linux:deb": "npm run app:build && node tools/run-dist-electron.js linux-deb",
    "electron:dist:linux:deb:all": "npm run app:build && npm run electron:dist:linux:deb:consumer && npm run electron:dist:linux:deb:work && npm run electron:dist:linux:deb:red ",
    "electron:dist:linux:deb:consumer": "npm run electron:dist:linux:deb consumer",
    "electron:dist:linux:deb:work": "npm run electron:dist:linux:deb work",
    "electron:dist:linux:deb:red": "npm run electron:dist:linux:deb red",
    "electron:dist:linux:rpm": "npm run app:build && node tools/run-dist-electron.js linux-deb",
    "electron:dist:linux:rpm:all": "npm run app:build && npm run electron:dist:linux:rpm:consumer && npm run electron:dist:linux:rpm:work && npm run electron:dist:linux:rpm:red",
    "electron:dist:linux:rpm:consumer": "npm run electron:dist:linux:rpm consumer",
    "electron:dist:linux:rpm:work": "npm run electron:dist:linux:rpm work",
    "electron:dist:linux:rpm:red": "npm run electron:dist:linux:rpm red",
    "electron:package:all": "npm run electron:package:macos && npm run electron:package:linux:deb:all && npm run electron:package:linux:rpm:all && npm run electron:package:windows:installer:all",
    "electron:package:macos": "npm run electron:package:macos:zip:all && npm run electron:package:macos:dmg:all",
    "electron:package:linux": "npm run electron:package:linux:deb && npm run electron:package:linux:rpm",
    "electron:package:windows:installer": "node tools/packaging/package-winstaller.js",
    "electron:package:windows:installer:all": "npm run electron:package:windows:installer:consumer && npm run electron:package:windows:installer:work && npm run electron:package:windows:installer:red",
    "electron:package:windows:installer:consumer": "npm run electron:package:windows:installer consumer",
    "electron:package:windows:installer:work": "npm run electron:package:windows:installer work",
    "electron:package:windows:installer:red": "npm run electron:package:windows:installer red",
    "electron:package:windows:portable": "node tools/packaging/package-portable-zip.js",
    "electron:package:macos:all": "npm run electron:package:macos:zip:all && npm run electron:package:macos:dmg:all",
    "electron:package:macos:zip": "node tools/packaging/package-zip.js",
    "electron:package:macos:zip:all": "npm run electron:package:macos:zip:consumer && npm run electron:package:macos:zip:work && npm run electron:package:macos:zip:red",
    "electron:package:macos:zip:consumer": "npm run electron:package:macos:zip consumer",
    "electron:package:macos:zip:work": "npm run electron:package:macos:zip work",
    "electron:package:macos:zip:red": "npm run electron:package:macos:zip red",
    "electron:package:macos:dmg": "node tools/packaging/package-dmg.js",
    "electron:package:macos:dmg:all": "npm run electron:package:macos:dmg:consumer && npm run electron:package:macos:dmg:work && npm run electron:package:macos:dmg:red",
    "electron:package:macos:dmg:consumer": "npm run electron:package:macos:dmg consumer",
    "electron:package:macos:dmg:work": "npm run electron:package:macos:dmg work",
    "electron:package:macos:dmg:red": "npm run electron:package:macos:dmg red",
    "electron:package:linux:deb": "node tools/packaging/package-deb.js",
    "electron:package:linux:deb:all": "npm run electron:package:linux:deb:consumer && npm run electron:package:linux:deb:work && npm run electron:package:linux:deb:red",
    "electron:package:linux:deb:consumer": "npm run electron:package:linux:deb consumer",
    "electron:package:linux:deb:work": "npm run electron:package:linux:deb work",
    "electron:package:linux:deb:red": "npm run electron:package:linux:deb red",
    "electron:package:linux:rpm": "node tools/packaging/package-rpm.js",
    "electron:package:linux:rpm:all": "npm run electron:package:linux:rpm:consumer && npm run electron:package:linux:rpm:work && npm run electron:package:linux:rpm:red",
    "electron:package:linux:rpm:consumer": "npm run electron:package:linux:rpm consumer",
    "electron:package:linux:rpm:work": "npm run electron:package:linux:rpm work",
    "electron:package:linux:rpm:red": "npm run electron:package:linux:rpm red",
    "generateUpdates": "node tools/generate-update-metadata.js",
    "generateUpdates:windows": "npm run generateUpdates updates windows consumer && npm run generateUpdates updates windows work && npm run generateUpdates updates windows red",
    "generateUpdates:macos": "npm run generateUpdates updates macOS consumer && npm run generateUpdates updates macOS work && npm run generateUpdates updates macOS red",
    "generateDownloads": "node tools/generate-update-metadata.js",
    "generateDownloads:windows": "npm run generateUpdates downloads windows consumer && npm run generateUpdates downloads windows work && npm run generateUpdates downloads windows red",
    "generateDownloads:macos": "npm run generateUpdates downloads macOS consumer && npm run generateUpdates downloads macOS work && npm run generateUpdates downloads macOS red",
    "generateDownloads:linux-deb": "npm run generateUpdates downloads linux-deb consumer && npm run generateUpdates downloads linux-deb work && npm run generateUpdates downloads linux-deb red",
    "generateDownloads:linux-rpm": "npm run generateUpdates downloads linux-rpm consumer && npm run generateUpdates downloads linux-rpm work && npm run generateUpdates downloads linux-rpm red"
  },
  "devDependencies": {
    "@electron/universal": "^1.1.0",
    "@threema/wasm-minisign-verify": "^0.1.3",
    "@types/chai": "^4.2.22",
    "@types/mocha": "^9.0.0",
    "@types/semver": "^7.3.9",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "asar": "^3.1.0",
    "chai": "^4.3.4",
    "copyfiles": "^2.4.1",
    "electron": "^16.0.2",
    "electron-notarize": "^1.1.1",
    "electron-packager": "^16.0.0",
    "eslint": "^8.2.0",
    "eslint-config-prettier": "^8.3.0",
    "jsdoc": "^3.6.7",
    "mocha-junit-reporter": "^2.0.2",
    "nyc": "^15.1.0",
    "prettier": "^2.4.1",
    "semver": "^7.3.5",
    "tmp-promise": "^3.0.3",
    "ts-mocha": "^8.0.0",
    "ts-node": "^10.4.0",
    "typescript": "^4.4.4"
  },
  "optionalDependencies": {
    "electron-installer-debian": "^3.1.0",
    "electron-installer-dmg": "^3.0.0",
    "electron-installer-redhat": "^3.3.0",
    "electron-installer-windows": "^3.0.0",
    "macos-alias": "^0.2.11"
  }
}
